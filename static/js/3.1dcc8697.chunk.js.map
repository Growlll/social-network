{"version":3,"sources":["hoc/withAuthRedirect.js","components/Dialogs/Dialogs.module.css","components/Dialogs/DialogsItem/DialogsItem.module.css","components/Dialogs/Message/Message.module.css","components/Dialogs/DialogsItem/DialogsItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/AddMessageForm/AddMessageForm.js","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Container","RedirectComponent","this","props","to","React","Component","connect","module","exports","DialogsItem","className","s","dialogsItems","id","dialog","name","Message","messages","message","maxLength100","maxLength","AddMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","sendBlock","Field","component","Textarea","validate","required","sendText","Dialogs","dialogsElements","dialogsPage","dialogs","map","d","messagesElements","m","messagesBlock","values","addMessage","dialogMessage","compose","messagesPage","dispatch","newMessageBody","addMessageActionCreator"],"mappings":"uNAIMA,EAA6B,SAACC,GAAD,MAAY,CAC7CC,OAAQD,EAAME,KAAKD,SAGRE,EAAmB,SAACC,GAAe,IACxCC,EADuC,uKAGzC,OAAIC,KAAKC,MAAMN,OACR,kBAACG,EAAcE,KAAKC,OADG,kBAAC,IAAD,CAAUC,GAAI,eAHH,GACbC,IAAMC,WAStC,OAFuCC,YAAQZ,EAARY,CAAoCN,K,oBCf7EO,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,OAAS,wBAAwB,OAAS,wBAAwB,cAAgB,+BAA+B,UAAY,2BAA2B,SAAW,4B,oBCArQD,EAAOC,QAAU,CAAC,aAAe,kCAAkC,OAAS,4BAA4B,OAAS,8B,oBCAjHD,EAAOC,QAAU,CAAC,SAAW,4B,yHCadC,EAVK,SAACP,GACnB,OACE,yBAAKQ,UAAWC,IAAEC,cAChB,kBAAC,IAAD,CAAST,GAAI,YAAcD,EAAMW,GAAIH,UAAWC,IAAEG,QAC/CZ,EAAMa,Q,kBCGAC,EARC,SAACd,GACf,OACE,yBAAKQ,UAAWC,IAAEM,UACff,EAAMgB,U,wCCAPC,EAAeC,YAAU,KAgBlBC,EAAsBC,YAAU,CAACC,KAAM,kBAAjBD,EAdZ,SAACpB,GACtB,OACE,0BAAMsB,SAAUtB,EAAMuB,cACpB,yBAAKf,UAAWC,IAAEe,WAChB,kBAACC,EAAA,EAAD,CAAOC,UAAWC,IACXC,SAAU,CAACC,IAAUZ,GACrBJ,KAAM,gBACNL,UAAWC,IAAEqB,WACpB,6CCwBOC,EAhCC,SAAC/B,GAEf,IAAKA,EAAMN,OAAQ,OAAO,kBAAC,IAAD,CAAUO,GAAI,WAExC,IAAM+B,EAAkBhC,EAAMiC,YAAYC,QACvCC,KAAI,SAAAC,GAAC,OAAI,kBAAC,EAAD,CAAazB,GAAIyB,EAAEzB,GAAIE,KAAMuB,EAAEvB,UAErCwB,EAAmBrC,EAAMiC,YAAYlB,SACxCoB,KAAI,SAAAG,GAAC,OAAI,kBAAC,EAAD,CAAStB,QAASsB,EAAEtB,aAMhC,OACE,yBAAKR,UAAWC,IAAEyB,SAChB,yBAAK1B,UAAWC,IAAEC,cACfsB,GAEH,6BACE,yBAAKxB,UAAWC,IAAE8B,eACfF,GAGH,kBAAClB,EAAD,CAAqBG,SAdL,SAACkB,GACrBxC,EAAMyC,WAAWD,EAAOE,qB,gBCIbC,sBACbvC,aAjBsB,SAACX,GACvB,MAAO,CACLwC,YAAaxC,EAAMwC,YACnBW,aAAcnD,EAAMwC,YACpBvC,OAAQD,EAAME,KAAKD,WAII,SAACmD,GAC1B,MAAO,CACLJ,WAAY,SAACK,GACXD,EAASE,YAAwBD,SAOrClD,IAFa+C,CAGbZ","file":"static/js/3.1dcc8697.chunk.js","sourcesContent":["import React from 'react'\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst mapStateToPropsForRedirect = (state) => ({\r\n  isAuth: state.auth.isAuth,\r\n})\r\n\r\nexport const withAuthRedirect = (Container) => {\r\n  class RedirectComponent extends React.Component {\r\n    render() {\r\n      if(!this.props.isAuth) return <Redirect to={'/login'} />\r\n      return <Container {...this.props}/>\r\n    }\r\n  }\r\n\r\n  const ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n\r\n  return ConnectedAuthRedirectComponent;\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__3zmIZ\",\"dialogsItems\":\"Dialogs_dialogsItems__GRr-W\",\"dialog\":\"Dialogs_dialog__2gez1\",\"active\":\"Dialogs_active__Rvk2b\",\"messagesBlock\":\"Dialogs_messagesBlock__39zsc\",\"sendBlock\":\"Dialogs_sendBlock__Y2drw\",\"sendText\":\"Dialogs_sendText__My-51\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogsItems\":\"DialogsItem_dialogsItems__CQR1S\",\"dialog\":\"DialogsItem_dialog__3BG71\",\"active\":\"DialogsItem_active__226IR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"messages\":\"Message_messages__1BXcF\"};","import React from \"react\";\r\nimport s from './DialogsItem.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst DialogsItem = (props) => {\r\n  return (\r\n    <div className={s.dialogsItems}>\r\n      <NavLink to={'/dialogs/' + props.id} className={s.dialog}>\r\n        {props.name}\r\n      </NavLink>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default DialogsItem;","import React from \"react\";\r\nimport s from './Message.module.css'\r\n\r\nconst Message = (props) => {\r\n  return (\r\n    <div className={s.messages}>\r\n      {props.message}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Message;","import s from \"../Dialogs.module.css\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport React from \"react\";\r\nimport {Textarea} from \"../../common/FormsControl/FormsControl\";\r\nimport {maxLength, required} from \"../../../utils/validators/validators\";\r\n\r\nconst maxLength100 = maxLength(100)\r\n\r\nconst DialogsMessage = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <div className={s.sendBlock}>\r\n        <Field component={Textarea}\r\n               validate={[required, maxLength100]}\r\n               name={'dialogMessage'}\r\n               className={s.sendText}/>\r\n        <button>Send</button>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport const AddMessageFormRedux = reduxForm({form: 'dialogsMessage'})(DialogsMessage)\r\n","import React from 'react';\r\nimport s from './Dialogs.module.css'\r\nimport DialogsItem from './DialogsItem/DialogsItem';\r\nimport Message from './Message/Message';\r\nimport {Redirect} from 'react-router-dom';\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {AddMessageFormRedux} from \"./AddMessageForm/AddMessageForm\";\r\n\r\nconst Dialogs = (props) => {\r\n\r\n  if (!props.isAuth) return <Redirect to={'/login'}/>\r\n\r\n  const dialogsElements = props.dialogsPage.dialogs\r\n    .map(d => <DialogsItem id={d.id} name={d.name}/>)\r\n\r\n  const messagesElements = props.dialogsPage.messages\r\n    .map(m => <Message message={m.message}/>)\r\n\r\n  const addNewMessage = (values) => {\r\n    props.addMessage(values.dialogMessage)\r\n  }\r\n\r\n  return (\r\n    <div className={s.dialogs}>\r\n      <div className={s.dialogsItems}>\r\n        {dialogsElements}\r\n      </div>\r\n      <div>\r\n        <div className={s.messagesBlock}>\r\n          {messagesElements}\r\n        </div>\r\n\r\n        <AddMessageFormRedux onSubmit={addNewMessage}/>\r\n\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nexport default Dialogs","import React from \"react\";\r\nimport {addMessageActionCreator} from \"../../redux/dialogs-reducer\";\r\nimport {connect} from \"react-redux\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    dialogsPage: state.dialogsPage,\r\n    messagesPage: state.dialogsPage,\r\n    isAuth: state.auth.isAuth,\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addMessage: (newMessageBody) => {\r\n      dispatch(addMessageActionCreator(newMessageBody))\r\n    }\r\n  }\r\n}\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, mapDispatchToProps),\r\n  withAuthRedirect\r\n)(Dialogs)"],"sourceRoot":""}